/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/js/myplaylist.js":
/*!*************************************!*\
  !*** ./src/client/js/myplaylist.js ***!
  \*************************************/
/***/ (() => {

eval("var musicImg = document.querySelector(\"#albumImg\");\nvar title = document.querySelector(\"#albumTitle\");\nvar artist = document.querySelector(\"#albumArtist\");\nvar albumData = [{\n  title: \"Edge of Desire\",\n  artist: \"John Mayer\",\n  image: \"/static/images/John-Mayer-2.jpg\",\n  source: \"/static/audios/Edge of Desire-John Mayer.mp3\"\n}, {\n  title: \"Golden Hour\",\n  artist: \"JVKE\",\n  image: \"/static/images/jvke1.jpeg\",\n  source: \"/static/audios/Golden Hour.mp3\"\n}, {\n  title: \"Gravity\",\n  artist: \"John Mayer\",\n  image: \"/static/images/John-Mayer.jpg\",\n  source: \"/static/audios/Gravity-John Mayer.mp3\"\n}, {\n  title: \"One Call Away\",\n  artist: \"Charlie Puth\",\n  image: \"/static/images/charlie puth.png\",\n  source: \"/static/audios/One Call Away.mp3\"\n}, {\n  title: \"Free Fallin' \",\n  artist: \"John Mayer\",\n  image: \"/static/images/John-Mayer-4.jpeg\",\n  source: \"/static/audios/Free Fallin'.mp3\"\n}, {\n  title: \"The Age of Worry\",\n  artist: \"John Mayer\",\n  image: \"/static/images/John-Mayer-2.jpg\",\n  source: \"/static/audios/The Age of Worry.mp3\"\n}];\nvar wholePlaylistData = [{\n  title: \"I AM\",\n  artist: \"IVE\",\n  image: \"/static/images/ive.jpg\",\n  source: \"/static/audios/I AM.mp3\"\n}, {\n  title: \"After Like\",\n  artist: \"IVE\",\n  image: \"/static/images/ive1.png\",\n  source: \"/static/audios/After LIKE.mp3\"\n}, {\n  title: \"Kitsch\",\n  artist: \"IVE\",\n  image: \"/static/images/ive2.png\",\n  source: \"/static/audios/Kitsch.mp3\"\n}, {\n  title: \"Blue Blood\",\n  artist: \"IVE\",\n  image: \"/static/images/ive.jpg\",\n  source: \"/static/audios/Blue Blood.mp3\"\n}, {\n  title: \"Golden Hour\",\n  artist: \"JVKE\",\n  image: \"/static/images/jvke1.jpeg\",\n  source: \"/static/audios/Golden Hour.mp3\"\n}, {\n  title: \"Upside Down (feat. Charlie Puth)\",\n  artist: \"JVKE\",\n  image: \"/static/images/jvke.jpeg\",\n  source: \"/static/audios/Upside Down (feat. Charlie Puth).mp3\"\n}, {\n  title: \"One Call Away\",\n  artist: \"Charlie Puth\",\n  image: \"/static/images/charlie puth.png\",\n  source: \"/static/audios/One Call Away.mp3\"\n}, {\n  title: \"Light Switch\",\n  artist: \"Charlie Puth\",\n  image: \"/static/images/charlie puth1.jpeg\",\n  source: \"/static/audios/Light Switch.mp3\"\n}, {\n  title: \"Good Parts\",\n  artist: \"LESSERAFIM\",\n  image: \"/static/images/lesserafim.jpg\",\n  source: \"/static/audios/good parts.mp3\"\n}, {\n  title: \"Impurities\",\n  artist: \"LESSERAFIM\",\n  image: \"/static/images/lesserafim.jpg\",\n  source: \"/static/audios/impurities.mp3\"\n}, {\n  title: \"Blue Flame\",\n  artist: \"LESSERAFIM\",\n  image: \"/static/images/lesserafim.jpg\",\n  source: \"/static/audios/Blue Flame.mp3\"\n}, {\n  title: \"No Celestial\",\n  artist: \"LESSERAFIM\",\n  image: \"/static/images/lesserafim.jpg\",\n  source: \"/static/audios/no celestial.mp3\"\n}, {\n  title: \"Hype Boy\",\n  artist: \"Newjeans\",\n  image: \"/static/images/newjeans.jpeg\",\n  source: \"/static/audios/Hype Boy.mp3\"\n}];\nvar audio = new Audio(albumData);\nvar playtime = document.getElementById(\"myelapsed\");\nvar timeline = document.getElementById(\"myslider\");\nvar starttime = document.getElementById(\"mystarttime\");\nvar endtime = document.getElementById(\"myendtime\");\nvar duration;\nstarttime.innerHTML = \"0:00\";\nendtime.innerHTML = \"-:--\"; // starttime 부분에 명시해야할 것 = 총 길이\n// timelineWidth 는 timeline - playtime이며, 재생시간 말고 남은 길이를 뜻함.\n\nvar timelineWidth = timeline.offsetWidth - playtime.offsetWidth;\n\nfunction timeUpdate() {\n  starttime.innerHTML = \"0:00\";\n  endtime.innerHTML = \"0:00\";\n  var durationTime = Math.floor(duration);\n  var seconds = Math.floor(audio.currentTime);\n  var playPercent = timelineWidth * (seconds / durationTime);\n  playtime.style.width = playPercent + \"px\"; // 시작시간이 늘어나게 만들 예정\n\n  if (durationTime <= 9) {\n    endtime.innerHTML = \"0:0\".concat(durationTime);\n  } else if (durationTime >= 10 && durationTime <= 59) {\n    endtime.innerHTML = \"0:\".concat(durationTime);\n  } else if (durationTime >= 60) {\n    var endtimeMin = Math.floor(durationTime / 60);\n    var endtimeSec = durationTime - 60 * endtimeMin;\n\n    if (endtimeSec <= 9) {\n      endtime.innerHTML = \"\".concat(endtimeMin, \":0\").concat(endtimeSec);\n    } else {\n      endtime.innerHTML = \"\".concat(endtimeMin, \":\").concat(endtimeSec);\n    }\n  }\n\n  if (seconds <= 9) {\n    starttime.innerHTML = \"0:0\".concat(seconds);\n  } else if (seconds >= 10 && seconds <= 59) {\n    starttime.innerHTML = \"0:\".concat(seconds);\n  } else if (seconds >= 60) {\n    var min = Math.floor(seconds / 60);\n    var sec = seconds - 60 * min;\n    sec <= 9 ? starttime.innerHTML = \"\".concat(min, \":0\").concat(sec) : starttime.innerHTML = \"\".concat(min, \":\").concat(sec);\n  }\n}\n\naudio.addEventListener(\"timeupdate\", timeUpdate, false);\nvar musicIndex = 0;\n\nvar loadMusic = function loadMusic() {\n  audio.src = albumData[musicIndex].source;\n  title.innerHTML = albumData[musicIndex].title;\n  artist.innerHTML = albumData[musicIndex].artist;\n  musicImg.src = albumData[musicIndex].image;\n};\n\nvar prev = document.querySelector(\"#prev\");\nvar play = document.querySelector(\"#play\");\nvar pause = document.querySelector(\"#pause\");\nvar next = document.querySelector(\"#next\");\nvar mute = document.querySelector(\"#mute\");\nvar volume = document.querySelector(\"#volume\");\nvar hidden = \"hidden\";\n\nvar showPlaylist = function showPlaylist() {\n  wholePlaylistData.forEach(function (music) {\n    var playlistol = document.getElementById(\"playlistol\");\n    var wholeMusiclistol = document.getElementById(\"wholeMusiclistol\");\n    var li = document.createElement(\"li\");\n    var div = document.createElement(\"div\");\n    var p = document.createElement(\"p\");\n    var span = document.createElement(\"span\");\n    var plus = document.createElement(\"img\"); // each song title and artist\n\n    div.id = \"infoDiv\";\n    p.id = \"musicPlayTitle\";\n    p.innerHTML = music.title;\n    span.id = \"musicPlayArtist\";\n    span.innerHTML = music.artist;\n    plus.id = \"plus\";\n    plus.src = \"/static/images/plus.png\";\n    div.append(p);\n    div.append(span);\n    li.append(div);\n    li.append(plus);\n    wholeMusiclistol.append(li);\n\n    var playMusic = function playMusic() {\n      audio.src = music.source;\n      title.innerHTML = music.title;\n      artist.innerHTML = music.artist;\n      musicImg.src = music.image;\n      play.classList.add(hidden);\n      pause.classList.remove(hidden); // 플레이리스트에 li를 추가해준다. + id도 추가해준다.\n      // 영구적이진 않음 = 추후에 DB에 넣어줘야할거 같음.\n      // 이어서 재생 가능하게 만들기 위해 리스트에 push 해준다.\n\n      albumData.push({\n        title: music.title,\n        artist: music.artist,\n        image: music.image,\n        source: music.source\n      });\n      playlistol.append(li);\n      li.id = \"musicli\";\n      li.removeChild(plus);\n      audio.play();\n    };\n\n    var pauseMusic = function pauseMusic() {\n      play.classList.remove(hidden);\n      pause.classList.add(hidden);\n      audio.pause();\n    };\n\n    li.addEventListener(\"click\", playMusic);\n    pause.addEventListener(\"click\", pauseMusic);\n  });\n  albumData.forEach(function (song) {\n    var playlistol = document.getElementById(\"playlistol\");\n    var li = document.createElement(\"li\");\n    var p = document.createElement(\"p\");\n    var span = document.createElement(\"span\");\n    var div = document.createElement(\"div\");\n    var plus = document.createElement(\"img\"); // each song title and artist\n\n    div.id = \"musicInfoDiv\";\n    p.id = \"songTitle\";\n    p.innerHTML = song.title;\n    span.id = \"songArtist\";\n    span.innerHTML = song.artist;\n    div.append(p);\n    div.append(span);\n    li.append(div);\n    playlistol.append(li);\n\n    var playMusic = function playMusic() {\n      audio.src = song.source;\n      title.innerHTML = song.title;\n      artist.innerHTML = song.artist;\n      musicImg.src = song.image;\n      play.classList.add(hidden);\n      pause.classList.remove(hidden); // 플레이리스트에 li를 추가해준다. + id도 추가해준다.\n      // 영구적이진 않음 = 추후에 DB에 넣어줘야할거 같음.\n\n      wholePlaylistData.push({\n        title: song.title,\n        artist: song.artist,\n        image: song.image,\n        source: song.source\n      });\n      wholeMusiclistol.append(li);\n      li.id = \"songli\";\n      plus.id = \"plus\";\n      plus.src = \"/static/images/plus.png\";\n      li.append(plus);\n      audio.play();\n    };\n\n    var pauseMusic = function pauseMusic() {\n      play.classList.remove(hidden);\n      pause.classList.add(hidden);\n      audio.pause();\n    }; // 음악 추가랑 같은 click으로 이뤄져야함.\n\n\n    li.addEventListener(\"click\", playMusic);\n    pause.addEventListener(\"click\", pauseMusic);\n  });\n};\n\nvar onPlay = function onPlay() {\n  // 끝났을때 다음 곡 재생\n  // if (audio.ended) {\n  //   musicIndex++;\n  //   if (musicIndex > albumData.length - 1) {\n  //     musicIndex = 0;\n  //   }\n  //   loadMusic(albumData[musicIndex]);\n  // }\n  play.classList.add(hidden);\n  pause.classList.remove(hidden);\n  audio.play();\n};\n\nvar onPause = function onPause() {\n  play.classList.remove(hidden);\n  pause.classList.add(hidden);\n  audio.pause();\n};\n\nvar onPrev = function onPrev() {\n  musicIndex--;\n\n  if (musicIndex < 0) {\n    musicIndex = albumData.length - 1;\n  }\n\n  loadMusic(albumData[musicIndex]);\n  onPlay();\n};\n\nvar onNext = function onNext() {\n  musicIndex++;\n\n  if (musicIndex > albumData.length - 1) {\n    musicIndex = 0;\n  }\n\n  loadMusic(albumData[musicIndex]);\n  onPlay();\n};\n\nvar onMute = function onMute() {\n  mute.classList.add(hidden);\n  volume.classList.remove(hidden);\n  audio.volume = 0;\n};\n\nvar onVolume = function onVolume() {\n  mute.classList.remove(hidden);\n  volume.classList.add(hidden);\n  audio.volume = 1;\n};\n\naudio.addEventListener(\"canplaythrough\", function () {\n  duration = audio.duration;\n}, false);\nwindow.addEventListener(\"load\", loadMusic);\nplay.addEventListener(\"click\", onPlay);\npause.addEventListener(\"click\", onPause);\nprev.addEventListener(\"click\", onPrev);\nnext.addEventListener(\"click\", onNext);\nmute.addEventListener(\"click\", onMute);\nvolume.addEventListener(\"click\", onVolume);\nshowPlaylist();\n\n//# sourceURL=webpack://tomato/./src/client/js/myplaylist.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client/js/myplaylist.js"]();
/******/ 	
/******/ })()
;